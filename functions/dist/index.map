{"version":3,"sources":["index.ts"],"names":[],"mappings":"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","file":"index.map","sourceRoot":"../src","sourcesContent":["import * as functions from 'firebase-functions'\nimport * as admin from 'firebase-admin'\nimport moment from 'moment'\nimport express, * as Express from 'express'\nimport cors from 'cors'\n\nadmin.initializeApp()\n\nconst spendItemsApp = express()\nspendItemsApp.use(\n  cors({\n    origin: true,\n    methods: ['GET', 'PUT', 'POST'],\n    allowedHeaders: ['Content-Type', 'Authorization'],\n    credentials: true,\n  })\n)\nconst authenticate = async (\n  req: any,\n  res: Express.Response,\n  next: Express.NextFunction\n) => {\n  const authorization = req.get('Authorization')\n  if (authorization == null) {\n    res.send({ errors: ['Invalid authenticated.'] })\n    return\n  }\n\n  const idToken = authorization.split('Bearer ')[1]\n\n  const me = await admin\n    .auth()\n    .verifyIdToken(idToken)\n    .catch(error => {\n      console.error(error)\n      res.send('Invalid authenticated.')\n    })\n  console.log(me)\n\n  req.me = me\n\n  next()\n}\nspendItemsApp.use(authenticate)\n\nspendItemsApp.get(\n  '/',\n  async (req: any, res): Promise<Express.Response> => {\n    const me = req.me\n\n    console.log(me)\n    // return res.send(me)\n\n    if (me == null) {\n      return res.send('Invalid authenticated.')\n    }\n\n    const db = admin.firestore()\n    db.collection('items').add({\n      price: Number(req.body.price),\n      userUid: me.uid,\n      createdAt: moment().format('YYYY/MM/DD HH:mm:ss'),\n    })\n\n    res.header('Access-Control-Allow-Origin', '*')\n    return res.send('Hello from Firebase!')\n  }\n)\n\nexports.spendItems = functions.https.onRequest(spendItemsApp)\n"]}